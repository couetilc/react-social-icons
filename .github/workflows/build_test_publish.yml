name: Build, Test, Publish

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test React v${{ matrix.react-version }}
    strategy:
      matrix:
        react-version: [ 15, 16, 17, 18 ]
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - *install-deps

      - name: Install React v${{ matrix.react-version }}
        run: pnpm i react@${{ matrix.react-version }} react-dom@${{ matrix.react-version }} --no-save

      - name: Test build
        run: pnpm run build

      - name: Test React v${{ matrix.react-version }}
        run: pnpm test

  publish:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: test
    runs-on: ubuntu-latest
    name: Publish Package
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - *install-deps

      - name: Prepublish
        run: pnpm run prepublish

      - name: Publish
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  example-page:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: publish
    runs-on: ubuntu-latest
    name: Update Example Page
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'origin/gh-pages'

      - *install-deps

      - name: Save Release Version
        id: release
        run: echo ::set-output name=version::$(pnpm view react-social-icons version)

      - name: Update, Build & Commit Example Site
        run: |
          git pull --no-edit origin v${{steps.release.outputs.version}}
          parcel build examples/index.html --public-url /react-social-icons/
          rm app.*
          cp dist/* .
          git add .
          git commit -m "v${{steps.release.outputs.version}}"
          git push origin gh-pages

x-install-deps: &install-deps
  - name: Setup Node
    uses: guardian/actions-setup-node@main
    with:
      node-version: latest
      registry-url: 'https://registry.npmjs.org'

  - name: Setup pnpm
    uses: pnpm/action-setup@v2
    with:
      run_install: false

  - name: Get pnpm store directory
    shell: bash
    run: |
      echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  - uses: actions/cache@v3
    name: Setup pnpm cache
    with:
      path: ${{ env.STORE_PATH }}
      key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      restore-keys: |
        ${{ runner.os }}-pnpm-store-

  - name: Install dependencies
    run: pnpm install

